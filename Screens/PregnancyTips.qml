import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick.Controls.Material

Page {
    id: root

    // –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö
    property var tips: [{
            "question": "–ö–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –Ω—É–∂–Ω—ã?",
            "answer": "–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (400 –º–∫–≥/–¥–µ–Ω—å) –≤ –ø–µ—Ä–≤–æ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ. –ü–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Ä–∞—á–∞: –π–æ–¥, –∂–µ–ª–µ–∑–æ, –≤–∏—Ç–∞–º–∏–Ω D.",
            "tags": ["–≤–∏—Ç–∞–º–∏–Ω—ã", "–∑–¥–æ—Ä–æ–≤—å–µ"],
            "icon": "üíä"
        }, {
            "question": "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?",
            "answer": "–î–∞! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:\n‚Ä¢ –ô–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n‚Ä¢ –ü–ª–∞–≤–∞–Ω–∏–µ\n‚Ä¢ –ü–µ—à–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏\n–ò–∑–±–µ–≥–∞–π—Ç–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞.",
            "tags": ["–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "—Å–ø–æ—Ä—Ç"],
            "icon": "üèÉ‚Äç‚ôÄÔ∏è"
        }, {
            "question": "–ö–∞–∫ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å —Ç–æ–∫—Å–∏–∫–æ–∑–æ–º?",
            "answer": "1. –î—Ä–æ–±–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\n2. –ò–º–±–∏—Ä–Ω—ã–π —á–∞–π\n3. –ò–∑–±–µ–≥–∞–π—Ç–µ —Ä–µ–∑–∫–∏—Ö –∑–∞–ø–∞—Ö–æ–≤\n–ü—Ä–∏ —Å–∏–ª—å–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö - –∫ –≤—Ä–∞—á—É.",
            "tags": ["—Ç–æ–∫—Å–∏–∫–æ–∑", "–ø–∏—Ç–∞–Ω–∏–µ"],
            "icon": "ü§¢"
        }]

    property var dailyTip: tips[Math.floor(Math.random() * tips.length)]
    property string searchText: ""

    // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    function filteredTips() {
        if (!searchText)
            return tips
        const query = searchText.toLowerCase()
        return tips.filter(tip => tip.question.toLowerCase().includes(query)
                           || tip.answer.toLowerCase().includes(query)
                           || tip.tags.some(tag => tag.toLowerCase(
                                                ).includes(query)))
    }

    // –§–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    background: Rectangle {
        gradient: Gradient {
            GradientStop {
                position: 0.0
                color: "#f3e5f5"
            }
            GradientStop {
                position: 1.0
                color: "#e1bee7"
            }
        }
    }

    property color primaryColor: "#9c27b0"
    property color secondaryColor: "#e1bee7"

    header: ToolBar {
        Material.foreground: "white"
        background: Rectangle {
            color: root.primaryColor
        }

        RowLayout {
            anchors.fill: parent
            ToolButton {
                icon.source: "qrc:/Images/icons/arrow_back.svg"
                onClicked: stackView.pop()
            }
            Label {
                text: "–°–æ–≤–µ—Ç—ã –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
                font {
                    family: "Comfortaa"
                    pixelSize: 20
                    bold: true
                }
                Layout.fillWidth: true
            }
        }
    }
    // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    ColumnLayout {
        anchors.fill: parent
        spacing: 15

        // –ü–æ–∏—Å–∫
        Rectangle {
            id: searchRect
            anchors.top: toolBarTop.bottom
            anchors.margins: 10
            Layout.fillWidth: true
            height: 50
            radius: 25
            color: "white"
            border.color: "#d1c4e9"
            border.width: 2

            RowLayout {
                anchors.fill: parent
                anchors.leftMargin: 15
                anchors.rightMargin: 15
                spacing: 10

                Text {
                    text: "üîç"
                    font.pixelSize: 20
                }

                TextField {
                    id: searchField
                    Layout.fillWidth: true
                    placeholderText: "–ü–æ–∏—Å–∫ —Å–æ–≤–µ—Ç–æ–≤..."
                    onTextChanged: searchText = text
                    background: Item {}
                }
            }
        }

        // –°–æ–≤–µ—Ç –¥–Ω—è
        Rectangle {
            id: daylyTipsRect
            anchors.top: searchRect.bottom
            anchors.margins: 10
            Layout.fillWidth: true
            radius: 12
            height: daylyTipsContainer.height
            color: "white"
            border.color: "#e1bee7"
            border.width: 1

            Column {
                id: daylyTipsContainer
                width: parent.width
                padding: 15
                spacing: 10

                Row {
                    spacing: 15
                    width: parent.width

                    Text {
                        text: dailyTip.icon
                        font.pixelSize: 28
                    }

                    Text {
                        text: "–°–æ–≤–µ—Ç –¥–Ω—è"
                        font.bold: true
                        color: "#7b1fa2"
                    }
                }

                Text {
                    width: parent.width - 20
                    text: dailyTip.question
                    font.bold: true
                    wrapMode: Text.WordWrap
                }

                Text {
                    width: parent.width
                    text: dailyTip.answer
                    wrapMode: Text.WordWrap
                }

                Flow {
                    width: parent.width
                    spacing: 8
                    padding: 5

                    Repeater {
                        model: dailyTip.tags
                        delegate: Rectangle {
                            height: 25
                            radius: 12
                            color: "#e1bee7"
                            width: tagText.width + 20

                            Text {
                                id: tagText
                                text: "#" + modelData
                                anchors.centerIn: parent
                                color: "#7b1fa2"
                                font.pixelSize: 12
                            }
                        }
                    }
                }
            }
        }
        ListView {
            id: listView
            anchors.margins: 10
            anchors.top: daylyTipsRect.bottom
            Layout.fillWidth: true
            height: 1000
            clip: true
            spacing: 15
            model: filteredTips()

            delegate: Rectangle {
                width: listView.width - 20 // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –ø–æ –±–æ–∫–∞–º
                height: expanded ? question.height + answer.height + tags.height
                                   + 60 : question.height + 50
                anchors.horizontalCenter: parent.horizontalCenter // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç
                radius: 12
                color: "white"
                border.color: "#e1bee7"
                border.width: 1

                property bool expanded: false

                Column {
                    width: parent.width
                    padding: 15
                    spacing: 10

                    // –í–æ–ø—Ä–æ—Å
                    Row {
                        width: parent.width
                        spacing: 15

                        Text {
                            text: modelData.icon
                            font.pixelSize: 24
                        }

                        Text {
                            id: question
                            width: parent.width - 70
                            text: modelData.question
                            font.bold: true
                            wrapMode: Text.WordWrap
                            maximumLineCount: expanded ? 0 : 2
                            elide: Text.ElideRight
                        }
                    }

                    // –û—Ç–≤–µ—Ç
                    Text {
                        id: answer
                        width: parent.width - 20
                        text: modelData.answer
                        visible: expanded
                        wrapMode: Text.WordWrap
                    }

                    // –¢–µ–≥–∏
                    Row {
                        id: tags
                        width: parent.width
                        spacing: 8
                        visible: expanded

                        Repeater {
                            model: modelData.tags
                            delegate: Rectangle {
                                height: 25
                                radius: 12
                                color: "#f3e5f5"
                                width: tagText1.width + 20

                                Text {
                                    id: tagText1
                                    text: "#" + modelData
                                    anchors.centerIn: parent
                                    color: "#7b1fa2"
                                    font.pixelSize: 12
                                }
                            }
                        }
                    }
                }

                TapHandler {
                    onTapped: parent.expanded = !parent.expanded
                }
            }
        }
    }
}
