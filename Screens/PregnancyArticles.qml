import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick.Controls.Material

Page {
    id: root

    // –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö
    property var tips: [{
            "title": "–ü–∏—Ç–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏",
            "content": "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–∏—Ç–∞–Ω–∏—è:\n\n‚Ä¢ –£–≤–µ–ª–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞\n‚Ä¢ –ï—à—å—Ç–µ –±–æ–ª—å—à–µ –æ–≤–æ—â–µ–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤\n‚Ä¢ –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã\n‚Ä¢ –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –∫–æ—Ñ–µ–∏–Ω –∏ –∏—Å–∫–ª—é—á–∏—Ç–µ –∞–ª–∫–æ–≥–æ–ª—å",
            "tags": ["–ø–∏—Ç–∞–Ω–∏–µ", "–∑–¥–æ—Ä–æ–≤—å–µ"],
            "icon": "üçé",
            "source": "–ñ—É—Ä–Ω–∞–ª '–ú–∞–º–∞ –∏ –º–∞–ª—ã—à'"
        }, {
            "title": "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º",
            "content": "–ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:\n\n1. –ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å—ã –¥–ª—è –±—É–¥—É—â–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π\n2. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Å—É–º–∫—É –≤ —Ä–æ–¥–¥–æ–º\n3. –ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è\n4. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–¥–¥–æ–º –∏ –≤—Ä–∞—á–∞",
            "tags": ["—Ä–æ–¥—ã", "–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"],
            "icon": "üë∂",
            "source": "–ö–Ω–∏–≥–∞ '–û—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ä–æ–¥—ã'"
        }, {
            "title": "–†–∞–∑–≤–∏—Ç–∏–µ –ø–ª–æ–¥–∞ –ø–æ –Ω–µ–¥–µ–ª—è–º",
            "content": "–û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–∑–≤–∏—Ç–∏—è:\n\n‚Ä¢ 1-12 –Ω–µ–¥–µ–ª—å: —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–æ–≤\n‚Ä¢ 13-27 –Ω–µ–¥–µ–ª—å: –∞–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç\n‚Ä¢ 28-40 –Ω–µ–¥–µ–ª—å: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–∂–¥–µ–Ω–∏—é",
            "tags": ["—Ä–∞–∑–≤–∏—Ç–∏–µ", "–∫–∞–ª–µ–Ω–¥–∞—Ä—å"],
            "icon": "üìÖ",
            "source": "–°–∞–π—Ç baby.ru"
        }]

    property var dailyTip: tips[Math.floor(Math.random() * tips.length)]
    property string searchText: ""

    // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    function filteredTips() {
        if (!searchText)
            return tips
        const query = searchText.toLowerCase()
        return tips.filter(tip => tip.title.toLowerCase().includes(query)
                           || tip.content.toLowerCase().includes(query)
                           || tip.tags.some(tag => tag.toLowerCase(
                                                ).includes(query)))
    }

    // –§–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    background: Rectangle {
        gradient: Gradient {
            GradientStop {
                position: 0.0
                color: "#f3e5f5"
            }
            GradientStop {
                position: 1.0
                color: "#e1bee7"
            }
        }
    }

    property color primaryColor: "#9c27b0"
    property color secondaryColor: "#e1bee7"

    header: ToolBar {
        Material.foreground: "white"
        background: Rectangle {
            color: root.primaryColor
        }

        RowLayout {
            anchors.fill: parent
            ToolButton {
                icon.source: "qrc:/Images/icons/arrow_back.svg"
                onClicked: stackView.pop()
            }
            Label {
                text: "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏"
                font {
                    family: "Comfortaa"
                    pixelSize: 20
                    bold: true
                }
                Layout.fillWidth: true
            }
        }
    }

    // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    ColumnLayout {
        anchors.fill: parent
        spacing: 15

        // –ü–æ–∏—Å–∫
        Rectangle {
            id: searchRect
            anchors.top: toolBarTop.bottom
            anchors.margins: 10
            Layout.fillWidth: true
            height: 50
            radius: 25
            color: "white"
            border.color: "#d1c4e9"
            border.width: 2

            RowLayout {
                anchors.fill: parent
                anchors.leftMargin: 15
                anchors.rightMargin: 15
                spacing: 10

                Text {
                    text: "üîç"
                    font.pixelSize: 20
                }

                TextField {
                    id: searchField
                    Layout.fillWidth: true
                    placeholderText: "–ü–æ–∏—Å–∫ —Å–æ–≤–µ—Ç–æ–≤..."
                    onTextChanged: searchText = text
                    background: Item {}
                }
            }
        }

        // –°–æ–≤–µ—Ç –¥–Ω—è
        Rectangle {
            id: daylyTipsRect
            anchors.top: searchRect.bottom
            anchors.margins: 10
            Layout.fillWidth: true
            radius: 12
            height: daylyTipsContainer.height
            color: "white"
            border.color: "#e1bee7"
            border.width: 1

            Column {
                id: daylyTipsContainer
                width: parent.width
                padding: 15
                spacing: 10

                Row {
                    spacing: 15
                    width: parent.width

                    Text {
                        text: dailyTip.icon
                        font.pixelSize: 28
                    }

                    Text {
                        text: "–°—Ç–∞—Ç—å—è –¥–Ω—è"
                        font.bold: true
                        color: "#7b1fa2"
                    }
                }

                Text {
                    width: parent.width - 20
                    text: dailyTip.title
                    font.bold: true
                    wrapMode: Text.WordWrap
                }

                Text {
                    width: parent.width
                    text: dailyTip.content
                    wrapMode: Text.WordWrap
                }

                Flow {
                    width: parent.width
                    spacing: 8
                    padding: 5

                    Repeater {
                        model: dailyTip.tags
                        delegate: Rectangle {
                            height: 25
                            radius: 12
                            color: "#e1bee7"
                            width: tagText.width + 20

                            Text {
                                id: tagText
                                text: "#" + modelData
                                anchors.centerIn: parent
                                color: "#7b1fa2"
                                font.pixelSize: 12
                            }
                        }
                    }
                }
            }
        }
        ListView {
            id: listView
            anchors.margins: 10
            anchors.top: daylyTipsRect.bottom
            Layout.fillWidth: true
            height: 1000
            clip: true
            spacing: 15
            model: filteredTips()

            delegate: Rectangle {
                width: listView.width - 20 // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –ø–æ –±–æ–∫–∞–º
                height: expanded ? title.height + content.height + tags.height
                                   + 60 : title.height + 50
                anchors.horizontalCenter: parent.horizontalCenter // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç
                radius: 12
                color: "white"
                border.color: "#e1bee7"
                border.width: 1

                property bool expanded: false

                Column {
                    width: parent.width
                    padding: 15
                    spacing: 10

                    // –í–æ–ø—Ä–æ—Å
                    Row {
                        width: parent.width
                        spacing: 15

                        Text {
                            text: modelData.icon
                            font.pixelSize: 24
                        }
                        Column {
                            width: parent.width
                            spacing: 5
                            Text {
                                id: title
                                width: parent.width - 70
                                text: modelData.title
                                font.bold: true
                                wrapMode: Text.WordWrap
                                maximumLineCount: expanded ? 0 : 2
                                elide: Text.ElideRight
                            }
                            Text {
                                id: source
                                width: parent.width - 70
                                text: modelData.source
                                wrapMode: Text.WordWrap
                                maximumLineCount: expanded ? 0 : 2
                                elide: Text.ElideRight
                            }
                        }
                    }

                    // –û—Ç–≤–µ—Ç
                    Text {
                        id: content
                        width: parent.width - 20
                        text: modelData.content
                        visible: expanded
                        wrapMode: Text.WordWrap
                    }

                    // –¢–µ–≥–∏
                    Row {
                        id: tags
                        width: parent.width
                        spacing: 8
                        visible: expanded

                        Repeater {
                            model: modelData.tags
                            delegate: Rectangle {
                                height: 25
                                radius: 12
                                color: "#f3e5f5"
                                width: tagText1.width + 20

                                Text {
                                    id: tagText1
                                    text: "#" + modelData
                                    anchors.centerIn: parent
                                    color: "#7b1fa2"
                                    font.pixelSize: 12
                                }
                            }
                        }
                    }
                }

                TapHandler {
                    onTapped: parent.expanded = !parent.expanded
                }
            }
        }
    }
}
